#include<bits/stdc++.h>
using namespace std;
struct Node{
    int val;
    Node *left,*right;
    Node(int data)
    {
        val = data;
        left = right  = NULL;
    }
};
map<int,int> mp;
int height(Node *root)
{
    if(root==NULL)
    {
        return 0;
    }
    int d1  = height(root->left);
    int d2 = height(root->right);
     mp[root->val]  = 1 + max(d1,d2);
     return 1+max(d1,d2);
}
pair<int,int> hD(Node *root)
{
    if(root == NULL)
    {
        return {0,0};
    }
    pair<int,int> left = hD(root->left);
    pair<int,int> right = hD(root->right);
    return  {1+max(left.first,right.first),max(1+left.first+right.first,max(1+left.first,1+right.first))};
}
int main()
{
    Node* root = new Node(10);
    root->left = new Node(20);
    root->right = new Node(30);                         
    root->left->right = new Node(40);
    root->left->left = new Node(50);
    root->right->left = new Node(60);
    root->right->right = new Node(70);
    root->left->left->left = new Node(80);
    pair<int,int> heightAndDia = hD(root);
    cout<<"height of the tree is "<<heightAndDia.first;
    cout<<endl;
    cout<<"diameter of the tree is "<<heightAndDia.second;
    int h = height(root);
    //mp[root->val] = h;
    cout<<endl;
    for(pair<int,int> p:mp)
    {
        cout<<p.first<<" "<<p.second<<" ";
        cout<<endl;
    }
    
}
